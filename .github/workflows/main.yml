name: Deploy Docker image to Azure Windows VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      #- name: Build Docker image
      #  run: |
      #    docker build -t karizma .
      #    docker save -o karizma.tar karizma

      #- name: Transfer Docker image to Azure Windows VM
      #  run: |
      #    sudo apt-get install -y sshpass
      #    sshpass -p ${{ secrets.WINDOWS_VM_PASSWORD }} scp -P ${{ secrets.WINDOWS_VM_PORT }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null karizma.tar ${{ secrets.WINDOWS_VM_USERNAME }}@${{ secrets.WINDOWS_VM_HOST }}:'C:\Users\comet\Desktop\'
      
      - name: Check if container is already running
        id: check-container
        run: |
          container_id=$(ssh -i ${{ secrets.SSH_PRIVATE_KEY_PATH }} -p ${{ secrets.WINDOWS_VM_PORT }} ${{ secrets.WINDOWS_VM_USERNAME }}@${{ secrets.WINDOWS_VM_HOST }} "docker ps -q --filter name=karizma")
          echo "::set-output name=container_id::$container_id"

      - name: Delete and stop container
        if: steps.check-container.outputs.container_id
        run: |
          container_id=${{ needs.check-container.outputs.container_id }}
          ssh -i ${{ secrets.SSH_PRIVATE_KEY_PATH }} -p ${{ secrets.WINDOWS_VM_PORT }} ${{ secrets.WINDOWS_VM_USERNAME }}@${{ secrets.WINDOWS_VM_HOST }} "docker stop $container_id"
          ssh -i ${{ secrets.SSH_PRIVATE_KEY_PATH }} -p ${{ secrets.WINDOWS_VM_PORT }} ${{ secrets.WINDOWS_VM_USERNAME }}@${{ secrets.WINDOWS_VM_HOST }} "docker rm $container_id"

      - name: Load new Docker image and run container
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY_PATH }} -p ${{ secrets.WINDOWS_VM_PORT }} ${{ secrets.WINDOWS_VM_USERNAME }}@${{ secrets.WINDOWS_VM_HOST }} "docker load -i C:\Users\comet\Desktop\karizma.tar"
          ssh -i ${{ secrets.SSH_PRIVATE_KEY_PATH }} -p ${{ secrets.WINDOWS_VM_PORT }} ${{ secrets.WINDOWS_VM_USERNAME }}@${{ secrets.WINDOWS_VM_HOST }} "docker run -d -p 8066:80 --name karizma karizma"
